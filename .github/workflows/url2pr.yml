name: Convert issue to PR
on:
  issues:
    types: [opened, edited, labeled]
jobs:
  convert-issue-to-pr-nb:
    if: contains(github.event.issue.labels.*.name, 'nb') && contains(github.event.issue.labels.*.name, 'recipe') && contains(github.event.issue.labels.*.name, 'recipe-scrapers')
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Parse issue
        id: parse
        uses: onmax/issue-form-parser@v1.5
        with:
          issue_number: ${{ github.event.issue.number }}
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12.4"
      - name: Install scripts with mise
        run: |
          curl https://mise.jdx.dev/install.sh | sh
          echo "$HOME/.local/share/mise/bin" >> $GITHUB_PATH
          echo "$HOME/.local/share/mise/shims" >> $GITHUB_PATH
          # mise trust
          # mise i
          mise run recipe-scrapers:install
          echo "PARSED=$(mise run recipe-scrapers:run ${{ fromJson(steps.parse.outputs.payload).Lenke }} | jq)" >> $GITHUB_ENV
          echo "$PARSED"
      - name: Set up environment variables
        run: |
          echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
          echo "ISSUEUSER=$(curl -s ${{ github.event.issue.user.url }} | jq -r '.name')" >> $GITHUB_ENV
          echo "ISSUEUSER_ID=$(curl -s ${{ github.event.issue.user.url }} | jq -r '.id')" >> $GITHUB_ENV
          if [[ "${{ fromJson(env.PARSED).author.name }}" == "" ]]; then echo "CREATOR=$ISSUEUSER" >> $GITHUB_ENV; else echo "CREATOR=${{ fromJson(env.PARSED).author.name }}" >> $GITHUB_ENV; fi
          echo "CREATORTITLE=Person" >> $GITHUB_ENV
          if [[ "${{ fromJson(env.PARSED).author.name }}" == "" ]]; then echo "CREATORURL=${{ github.event.issue.html_url }}" >> $GITHUB_ENV; else echo "CREATORURL=${{ fromJson(env.PARSED).author.url }}" >> $GITHUB_ENV; fi
          echo "CATEGORY=${{ fromJson(steps.parse.outputs.payload).Kategori }}"
          echo "TMPDIR=/tmp/src/$CATEGORY" >> $GITHUB_ENV
          echo "TMPFILE=/tmp/src/$CATEGORY/${{ fromJson(env.PARSED).pattern }}.md" >> $GITHUB_ENV
          echo "FILE_REL_TO_ROOT=src/$CATEGORY/${{ fromJson(env.PARSED).pattern }}.md" >> $GITHUB_ENV
      - name: Create recipe
        run: |
          mkdir -p "$TMPDIR"
          touch "$TMPFILE"

          cat << EOF > "$TMPFILE"
          ---
          description: "${{ fromJson(env.PARSED).totalTime }} | ${{ fromJson(steps.parse.outputs.payload).Vanskelighetsgrad }}"
          authors:
            - name: "$ISSUEUSER (@${{ github.event.issue.user.login }})"
              link: "${{ github.event.issue.user.html_url }}"
              avatar: "${{ github.event.issue.user.avatar_url }}"
          date: $DATE
          category:
            - $ISSUEUSER
            - $CATEGORY
          tag:
          EOF
          for tag in ${{ join(fromJson(steps.parse.outputs.payload).Emner, ' ') }}
          do
              echo "  - $tag">>"$TMPFILE"
          done
          cat << EOF >> "$TMPFILE"
          ---

          # ${{ fromJson(env.PARSED).name }}

          ![](/static/${{ fromJson(env.PARSED).pattern }}/${{ fromJson(env.PARSED).pattern }}.webp)

          EOF
          if [[ "${{ fromJson(env.PARSED).author.name }}" != "" ]] && [[ "${{ fromJson(steps.parse.outputs.payload).Lenke }}" != "" ]]; then
          cat << EOF >> "$TMPFILE"
          !!!info

          Denne oppskriften er originalt fra
          [!badge variant="dark" iconAlign="right" margin="0 0 0 4" icon=":cook:" size="l" target="blank" text="${{ fromJson(env.PARSED).author.name }}"](${{ fromJson(steps.parse.outputs.payload).Lenke }})

          !!!

          EOF
          elif [[ "${{ fromJson(env.PARSED).author.name }}" != "" ]]; then
          cat << EOF >> "$TMPFILE"
          !!!info

          Denne oppskriften er originalt fra
          [!badge variant="dark" iconAlign="right" margin="0 0 0 4" icon=":cook:" size="l" target="blank" text="${{ fromJson(env.PARSED).author.name }}"]

          !!!

          EOF
          fi
          cat << EOF >> "$TMPFILE"
          <!-- dprint-ignore-start -->
          ||| :timer_clock: Tid
          ${{ fromJson(env.PARSED).totalTime }}
          ||| :knife_fork_plate: Porsjoner
          ${{ fromJson(env.PARSED).recipeYield }}
          ||| :cook: Vanskelighetsgrad
          ${{ fromJson(steps.parse.outputs.payload).Vanskelighetsgrad }}
          |||
          <!-- dprint-ignore-end -->

          ## Ingredienser

          EOF
          while IFS= read -r ingredient; do
              echo "- $ingredient" >>"$TMPFILE"
          done < <(echo "${{ fromJson(env.PARSED).recipeIngredient }}")
          cat << EOF >> "$TMPFILE"

          ## Steg

          EOF
          count=1
          while IFS= read -r step; do
              echo "$count. $step">>"$TMPFILE"
              ((count ++))
          done < <(echo "${{ fromJson(env.PARSED).recipeInstructions }}" | jq '.[][].["text"]')
          cat << EOF >> "$TMPFILE"

          <script type="application/ld+json">
          "${{ fromJson(env.PARSED) }}"
          </script>
          EOF
          cat "$TMPFILE"
          mv "$TMPFILE" ./"$FILE_REL_TO_ROOT"
      - name: Update main branch
        run: |
          git pull --rebase
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          branch: "${{ fromJson(env.PARSED).pattern }}"
          add-paths: |
            ${{ env.FILE_REL_TO_ROOT }}
          delete-branch: true
          author: ${{ github.event.issue.user.login }} <${{ env.ISSUEUSER_ID }}+${{ github.event.issue.user.login }}@users.noreply.github.com>
          reviewers: ${{ github.repository_owner }}
          assignees: ${{ github.repository_owner }}
          title: "feat(recipe): ${{ fromJson(env.PARSED).name }}"
          body: |
            :robot: Jeg lagde akkurat en PR for å legge til ${{ fromJson(env.PARSED).name }} på vegne av [@${{ github.event.issue.user.login }}](${{ github.event.issue.user.html_url }}).

            Resolves #${{ github.event.issue.number }}
          labels: |
            recipe
